{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar FormatDate = /*#__PURE__*/function () {\n  function FormatDate(date) {\n    _classCallCheck(this, FormatDate);\n\n    this.getMonthName = function (lang) {\n      lang = lang && lang in Date.locale ? lang : 'en';\n      return Date.locale[lang].month_names[this.getMonth()];\n    };\n\n    this.getMonthNameShort = function (lang) {\n      lang = lang && lang in Date.locale ? lang : 'en';\n      return Date.locale[lang].month_names_short[this.getMonth()];\n    };\n\n    this.locale = {\n      en: {\n        month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        month_names_short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n      }\n    };\n  }\n\n  _createClass(FormatDate, null, [{\n    key: \"teste\",\n    value: function teste(date) {\n      return \"ok!\";\n    }\n  }]);\n\n  return FormatDate;\n}();\n\nexport default FormatDate;","map":{"version":3,"sources":["C:/Users/roko/Documents/TwitterAPI/frontend/src/utils/formatDate.js"],"names":["FormatDate","date","getMonthName","lang","Date","locale","month_names","getMonth","getMonthNameShort","month_names_short","en"],"mappings":";;;IACMA,U;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAAA,SAGlBC,YAHkB,GAGH,UAAUC,IAAV,EAAgB;AAC7BA,MAAAA,IAAI,GAAGA,IAAI,IAAKA,IAAI,IAAIC,IAAI,CAACC,MAAtB,GAAgCF,IAAhC,GAAuC,IAA9C;AACA,aAAOC,IAAI,CAACC,MAAL,CAAYF,IAAZ,EAAkBG,WAAlB,CAA8B,KAAKC,QAAL,EAA9B,CAAP;AACD,KANiB;;AAAA,SAQlBC,iBARkB,GAQE,UAAUL,IAAV,EAAgB;AAClCA,MAAAA,IAAI,GAAGA,IAAI,IAAKA,IAAI,IAAIC,IAAI,CAACC,MAAtB,GAAgCF,IAAhC,GAAuC,IAA9C;AACA,aAAOC,IAAI,CAACC,MAAL,CAAYF,IAAZ,EAAkBM,iBAAlB,CAAoC,KAAKF,QAAL,EAApC,CAAP;AACD,KAXiB;;AAAA,SAiBlBF,MAjBkB,GAiBT;AACPK,MAAAA,EAAE,EAAE;AACFJ,QAAAA,WAAW,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CADX;AAEFG,QAAAA,iBAAiB,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E;AAFjB;AADG,KAjBS;AAEjB;;;;0BAWYR,I,EAAM;AACjB,aAAO,KAAP;AACD;;;;;;AAUH,eAAeD,UAAf","sourcesContent":["\r\nclass FormatDate {\r\n  constructor(date) {\r\n\r\n  }\r\n  getMonthName = function (lang) {\r\n    lang = lang && (lang in Date.locale) ? lang : 'en';\r\n    return Date.locale[lang].month_names[this.getMonth()];\r\n  };\r\n\r\n  getMonthNameShort = function (lang) {\r\n    lang = lang && (lang in Date.locale) ? lang : 'en';\r\n    return Date.locale[lang].month_names_short[this.getMonth()];\r\n  };\r\n\r\n  static teste(date) {\r\n    return \"ok!\"\r\n  }\r\n\r\n  locale = {\r\n    en: {\r\n      month_names: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n      month_names_short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    }\r\n  };\r\n\r\n}\r\nexport default FormatDate\r\n"]},"metadata":{},"sourceType":"module"}