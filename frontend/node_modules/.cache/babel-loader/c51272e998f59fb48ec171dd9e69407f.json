{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\roko\\\\Documents\\\\TwitterAPI\\\\frontend\\\\src\\\\components\\\\temperature.js\";\nimport React from \"react\";\nvar scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nvar TemperatureInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(TemperatureInput, _React$Component);\n\n  function TemperatureInput(props) {\n    var _this;\n\n    _classCallCheck(this, TemperatureInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemperatureInput).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      temperature: ''\n    };\n    return _this;\n  }\n\n  _createClass(TemperatureInput, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // Before: this.setState({temperature: e.target.value});\n      this.props.onTemperatureChange(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = this.props.temperature; //   const temperature = this.state.temperature;\n\n      var scale = this.props.scale;\n      return /*#__PURE__*/React.createElement(\"fieldset\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"legend\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Enter temperature in \", scaleNames[scale], \":\"), /*#__PURE__*/React.createElement(\"input\", {\n        value: temperature,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return TemperatureInput;\n}(React.Component);\n\nexport default TemperatureInput;","map":{"version":3,"sources":["C:/Users/roko/Documents/TwitterAPI/frontend/src/components/temperature.js"],"names":["React","scaleNames","c","f","TemperatureInput","props","handleChange","bind","state","temperature","e","onTemperatureChange","target","value","scale","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,CAAC,EAAE,SADY;AAEfC,EAAAA,CAAC,EAAE;AAFY,CAAnB;;IAKQC,gB;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AAHiB;AAIlB;;;;iCAEYC,C,EAAG;AACR;AACR,WAAKL,KAAL,CAAWM,mBAAX,CAA+BD,CAAC,CAACE,MAAF,CAASC,KAAxC;AACC;;;6BAEQ;AACL,UAAMJ,WAAW,GAAG,KAAKJ,KAAL,CAAWI,WAA/B,CADK,CAET;;AACE,UAAMK,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAzB;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8Bb,UAAU,CAACa,KAAD,CAAxC,MADF,eAEE;AAAO,QAAA,KAAK,EAAEL,WAAd;AACO,QAAA,QAAQ,EAAE,KAAKH,YADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOD;;;;EAvB4BN,KAAK,CAACe,S;;AA0BrC,eAAeX,gBAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst scaleNames = {\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n  };\r\n  \r\n  class TemperatureInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.state = {temperature: ''};\r\n    }\r\n  \r\n    handleChange(e) {\r\n            // Before: this.setState({temperature: e.target.value});\r\n    this.props.onTemperatureChange(e.target.value);\r\n    }\r\n  \r\n    render() {\r\n        const temperature = this.props.temperature;\r\n    //   const temperature = this.state.temperature;\r\n      const scale = this.props.scale;\r\n      return (\r\n        <fieldset>\r\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n          <input value={temperature}\r\n                 onChange={this.handleChange} />\r\n        </fieldset>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TemperatureInput;\r\n\r\n  "]},"metadata":{},"sourceType":"module"}