{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\roko\\\\Documents\\\\TwitterAPI\\\\frontend\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HeaderComponent from \"../src/components/header.component\";\nimport InputSearchComponent from \"../src/components/input.search.component\";\nimport ResultTableComponent from \"../src/components/result.table.component\";\nimport TemperatureInput from \"../src/components/temperature\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // this.handleChange = this.handleChange.bind(this);\n\n    _this.changeTheWorld = function (e) {\n      _this.setState({\n        keyword: e\n      });\n\n      console.log(\"hi!!! You did it!!!\");\n    };\n\n    _this.state = {\n      keyword: \"\",\n      tweets: \"\"\n    };\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.changeTheWorld = function (e) {\n      _this.setState({\n        keyword: e\n      });\n\n      console.log(\"hi!!! You did it!!!\");\n    };\n\n    _this.handleCelsiusChange = _this.handleCelsiusChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFahrenheitChange = _this.handleFahrenheitChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleCelsiusChange\",\n    value: function handleCelsiusChange(temperature) {\n      this.setState({\n        scale: 'c',\n        temperature: temperature\n      });\n    }\n  }, {\n    key: \"handleFahrenheitChange\",\n    value: function handleFahrenheitChange(temperature) {\n      this.setState({\n        scale: 'f',\n        temperature: temperature\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      setInterval(function () {\n        console.log(_this2.state.keyword);\n      }, 1000);\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          tweets = _this$state.tweets; // this.getTweets({ keyword });\n\n      return /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        label: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/statistics\",\n        label: \"About\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Statistics\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TemperatureInput, {\n        scale: \"c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(TemperatureInput, {\n        scale: \"f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      }, keyword), /*#__PURE__*/React.createElement(HeaderComponent, {\n        title: \"Mockup for TwitterAPI\",\n        description: \"ReactJS + ExpressJS + NodeJS + TwitterAPI\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InputSearchComponent, {\n        doWhatever: this.changeTheWorld.bind(this, this.state.keyword),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resultArea\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ResultTableComponent, {\n        tweets: tweets,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/statistics\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }, {\n    key: \"getTweets\",\n    value: function () {\n      var _getTweets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(temperature) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"http://localhost:4000/\" + temperature);\n\n              case 3:\n                result = _context.sent;\n                this.setState({\n                  tweets: JSON.stringify(result)\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getTweets(_x) {\n        return _getTweets.apply(this, arguments);\n      }\n\n      return getTweets;\n    }()\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/roko/Documents/TwitterAPI/frontend/src/App.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","Link","HeaderComponent","InputSearchComponent","ResultTableComponent","TemperatureInput","App","props","changeTheWorld","e","setState","keyword","console","log","state","tweets","handleCelsiusChange","bind","handleFahrenheitChange","temperature","scale","setInterval","get","result","JSON","stringify","error","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HeaderComponent from \"../src/components/header.component\";\nimport InputSearchComponent from \"../src/components/input.search.component\";\nimport ResultTableComponent from \"../src/components/result.table.component\";\nimport TemperatureInput from \"../src/components/temperature\";\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n      super(props);\n      // this.handleChange = this.handleChange.bind(this);\n      this.state = {keyword:\"\",tweets:\"\"};\n\n      super(props);\n      this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n      this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n      this.state = {temperature: '', scale: 'c'};\n    }\n  \n    handleCelsiusChange(temperature) {\n      this.setState({scale: 'c', temperature});\n    }\n  \n    handleFahrenheitChange(temperature) {\n      this.setState({scale: 'f', temperature});\n    }\n\n  changeTheWorld = (e) => {\n    this.setState({ keyword: e });\n    console.log(\"hi!!! You did it!!!\");\n  }\n\n  render() {\n    setInterval(() => {\n      console.log(this.state.keyword);\n    }, 1000);\n    var { keyword, tweets } = this.state;\n    // this.getTweets({ keyword });\n    return (\n      <Router>\n        <div>\n          <Link to=\"/\" label=\"Home\">Home</Link>\n          <Link to=\"/statistics\" label=\"About\">Statistics</Link>\n          <hr />\n\n          <div>\n        <TemperatureInput scale=\"c\" />\n        <TemperatureInput scale=\"f\" />\n      </div>\n\n      <hr />\n          <div className=\"App container\">\n           <h1>{keyword}</h1>\n            {/* {tweets} */}\n            <HeaderComponent\n              title=\"Mockup for TwitterAPI\"\n              description=\"ReactJS + ExpressJS + NodeJS + TwitterAPI\"\n            />\n            <InputSearchComponent doWhatever={this.changeTheWorld.bind(this, this.state.keyword)}  />\n          </div>\n          <div className=\"resultArea\">\n            <div className=\"container\">\n              <ResultTableComponent tweets={tweets} />\n            </div>\n          </div>\n\n          <Switch>\n            <Route exact path=\"/\">\n              {/* <Home /> */}\n            </Route>\n            <Route path=\"/statistics\">\n              {/* <About /> */}\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n\n  async getTweets(temperature) {\n    try {\n      const result = await axios.get(\"http://localhost:4000/\" + temperature);\n      this.setState({ tweets: JSON.stringify(result) })\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}